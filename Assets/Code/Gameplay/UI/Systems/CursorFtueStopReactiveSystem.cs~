using System.Collections.Generic;
using Entitas;

namespace Code.Gameplay.UI.Systems
{
    public class CursorFtueStopReactiveSystem : ReactiveSystem<GameEntity>
    {
        private readonly GameContext _game;

        public CursorFtueStopReactiveSystem(IContext<GameEntity> context) : base(context)
        {
            _game = Contexts.sharedInstance.game;
        }

        protected override ICollector<GameEntity> GetTrigger(IContext<GameEntity> context) =>
            context.CreateCollector(GameMatcher.RouteFinishId.Added());

        protected override bool Filter(GameEntity entity) =>
            _game.inputEntity.choseLevel.Value == 0;

        protected override void Execute(List<GameEntity> entities)
        {
            IGroup<GameEntity> routes = _game.GetGroup(GameMatcher.Route);
            
            if (routes.count == 1)
                _game.hudCanvasEntity.cursorFtue.Value.StopAnimateCursorDrag();
        }
    }
}