using System.Collections.Generic;
using Code.Gameplay.Levels;
using Code.Infrastructure.StaticData;
using Entitas;

namespace Code.Gameplay.UI.Systems.Ftue
{
    public class CursorFtueStartCreationRouteReactiveSystem : ReactiveSystem<GameEntity>
    {
        private readonly GameContext _game;
        private readonly CommonStaticData _commonStaticData;

        public CursorFtueStartCreationRouteReactiveSystem(IContext<GameEntity> context, CommonStaticData commonStaticData) : base(context)
        {
            _commonStaticData = commonStaticData;
            _game = Contexts.sharedInstance.game;
        }

        protected override ICollector<GameEntity> GetTrigger(IContext<GameEntity> context) =>
            context.CreateCollector(GameMatcher.PlayClick.Added());

        protected override bool Filter(GameEntity entity) =>
            _game.inputEntity.choseLevel.Value == 0;

        protected override void Execute(List<GameEntity> entities)
        {
            List<LevelObjectData> levelObjectDatas = _commonStaticData.levels[0].levelObjects;
            LevelObjectData blueTower = levelObjectDatas[3];
            LevelObjectData neutralTower = levelObjectDatas[2];
            _game.hudCanvasEntity.cursorFtue.Value.StartRouteCreationDrag(blueTower.position, neutralTower.position);
        }
    }
}