//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Towers.ProjectileTargetId projectileTargetId { get { return (Code.Gameplay.Towers.ProjectileTargetId)GetComponent(GameComponentsLookup.ProjectileTargetId); } }
    public bool hasProjectileTargetId { get { return HasComponent(GameComponentsLookup.ProjectileTargetId); } }

    public void AddProjectileTargetId(int newValue) {
        var index = GameComponentsLookup.ProjectileTargetId;
        var component = (Code.Gameplay.Towers.ProjectileTargetId)CreateComponent(index, typeof(Code.Gameplay.Towers.ProjectileTargetId));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceProjectileTargetId(int newValue) {
        var index = GameComponentsLookup.ProjectileTargetId;
        var component = (Code.Gameplay.Towers.ProjectileTargetId)CreateComponent(index, typeof(Code.Gameplay.Towers.ProjectileTargetId));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileTargetId() {
        RemoveComponent(GameComponentsLookup.ProjectileTargetId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectileTargetId;

    public static Entitas.IMatcher<GameEntity> ProjectileTargetId {
        get {
            if (_matcherProjectileTargetId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectileTargetId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectileTargetId = matcher;
            }

            return _matcherProjectileTargetId;
        }
    }
}
